#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Розробити функцію saddle_point(matrix),
яка приймає 1 аргумент -- прямокутну матрицю цілих чисел, задану у вигляді списка списків,
та повертає тьюпл із координатами "сідлової точки" переданої матриці або логічну константу False,
якщо такої точки не існує.
Сідловою точкою вважається такий елемент матриці, який є мінімальним (строго менше за інші)
у своєму рядку та максимальним (строго більше за інші) у своєму стовпці, наприклад:
матриця:
1 2 3
0 2 1
"1" в лівому верхньому кутку (за координатами (0;0)) є сідловою точкою матриці.
Вважати, що передані дані є коректними, тобто матриця не містить інших значень крім цілих чисел,
а всі вкладені списки мають однакову довжину. Результуючий тьюпл містить два числа -- порядкові номери
сідлової точки в рядку (індекс його списка у зовнішньому списку) та в стовпці (індекс у внутрішньому списку).
Наприклад
1 2 3
3 2 1
Виклик функції: saddle_point([[1,2,3],[3,2,1]])
Повертає: False
Виклик функції: saddle_point([[8,3,0,1,2,3,4,8,1,2,3],[3,2,1,2,3,9,4,7,9,2,3],[7,6,0,1,3,5,2,3,4,1,1]])
Повертає: (1, 2)
8 3 0 1 2 3 4 8 1 2 3
3 2 1 2 3 9 4 7 9 2 3
7 6 0 1 3 5 2 3 4 1 1
Виклик функції: saddle_point([[21]])
Повертає: (0, 0)
Сідловою точкою вважається такий елемент матриці,
який є мінімальним (строго менше за інші) у своєму рядку та максимальним
(строго більше за інші) у своєму стовпці
Седловая точка матрицы
Седловой точкой (седловым элементом) матрицы A = (a_{i, j})_{i = 1, j = 1}^{m, n} называют элемент матрицы a_{k, l},
удовлетворяющий условиям, то есть элемент матрицы, который одновременно является
минимальным элементом в соответствующей строке матрицы и максимальным элементом в соответствующем столбце матрицы
"""
def saddle_point(matrix):
	l_min=None; y=0; l_index=None;
	if len(matrix) == 1:
		return (0,0)
	while len(matrix) > y:
		for i in matrix:
			l_min=min(i)
			l_index=i.index(l_min)
			for j in matrix:
				if l_min > j[l_index]:
					return (matrix.index(i), l_index)
		return False
		y+=gt1


print(saddle_point([[10, 9, 8, 7, 6, 5, 4, 3, 2, 1], [11, 10, 9, 8, 7, 6, 5, 4, 3, 2], [12, 11, 10, 9, 8, 7, 6, 5, 4, 3], [13, 12, 11, 10, 9, 8, 7, 6, 5, 4], [14, 13, 12, 11, 10, 9, 8, 7, 6, 5], [15, 14, 13, 12, 11, 10, 9, 8, 7, 6], [16, 15, 14, 13, 12, 11, 10, 9, 8, 7], [17, 16, 15, 14, 13, 12, 11, 10, 9, 8], [18, 17, 16, 15, 14, 13, 12, 11, 10, 9], [19, 18, 17, 16, 15, 14, 13, 12, 11, 10]]), (9, 9))
print (saddle_point([[5,5,5], [5,5,6], [5,4,5]]), False)
print (saddle_point([[1,2,3,0,1,1], [4,3,2,1,1,2], [4,3,2,0,1,1], [0,0,0,0,0,1]]),False)
print (saddle_point([[0,0,0],[2,1,2],[1,0,1]]), (1, 1))
print (saddle_point([[13]]), (0,0))
print(saddle_point([[1,2,3],[3,2,1]]))
print(saddle_point([[8,3,0,1,2,3,4,8,1,2,3],[3,2,1,2,3,9,4,7,9,2,3],[7,6,0,1,3,5,2,3,4,1,1]]))
print(saddle_point([[21]]))
print(saddle_point([  [10, 9, 8, 7, 6, 5, 4, 3, 2, 1],
				[11, 10, 9, 8, 7, 6, 5, 4, 3, 2],
				[12, 11, 10, 9, 8, 7, 6, 5, 4, 3],
				[13, 12, 11, 10, 9, 8, 7, 6, 5, 4],
				[14, 13, 12, 11, 10, 9, 8, 7, 6, 5],
				[15, 14, 13, 12, 11, 10, 9, 8, 7, 6],
				[16, 15, 14, 13, 12, 11, 10, 9, 8, 7],
				[17, 16, 15, 14, 13, 12, 11, 10, 9, 8],
				[18, 17, 16, 15, 14, 13, 12, 11, 10, 9],
				[19, 18, 17, 16, 15, 14, 13, 12, 11, 10]]) )
"""
Правильно
Виклик:
saddle_point([[13]])
Відповідь:
    (0, 0)
Правильно
Виклик:
saddle_point([[0,0,0],[2,1,2],[1,0,1]])
Відповідь:
    (1, 1)
Помилки
Неправильно обрахований результат. Для виклику 
saddle_point([[1,2,3,0,1,1], [4,3,2,1,1,2], [4,3,2,0,1,1], [0,0,0,0,0,1]]) 
очікуваний результат: False. Ваш результат: '(1, 3)'
Ваша відповідь:
    (1, 3)
Правильна відповідь:
    False
Правильно
Виклик:
saddle_point([[5,5,5], [5,5,6], [5,4,5]])
Відповідь:
    False
Помилки
Неправильно обрахований результат. Для виклику 
saddle_point([  [10, 9, 8, 7, 6, 5, 4, 3, 2, 1],
				[11, 10, 9, 8, 7, 6, 5, 4, 3, 2],
				[12, 11, 10, 9, 8, 7, 6, 5, 4, 3],
				[13, 12, 11, 10, 9, 8, 7, 6, 5, 4],
				[14, 13, 12, 11, 10, 9, 8, 7, 6, 5],
				[15, 14, 13, 12, 11, 10, 9, 8, 7, 6],
				[16, 15, 14, 13, 12, 11, 10, 9, 8, 7],
				[17, 16, 15, 14, 13, 12, 11, 10, 9, 8],
				[18, 17, 16, 15, 14, 13, 12, 11, 10, 9],
				[19, 18, 17, 16, 15, 14, 13, 12, 11, 10]]) 
очікуваний результат: (9, 9). Ваш результат: '(1, 9)'
Ваша відповідь:
    (1, 9)
Правильна відповідь:
    (9, 9)
"""